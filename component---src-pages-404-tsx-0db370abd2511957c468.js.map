{"version":3,"sources":["webpack:///./src/components/Seo.tsx","webpack:///./src/pages/404.tsx"],"names":["Seo","title","description","image","article","pathname","useLocation","siteUrl","useStaticQuery","site","siteMetadata","seo","useMemo","defaultImage","url","defaultTitle","titleTemplate","name","content","property","memo","cls","NotFound","className","severity"],"mappings":"2FAAA,qFAmBMA,EAAM,SAAC,GAUP,IATJC,EASI,EATJA,MACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,QAOQC,EAAaC,wBAAbD,SAEAE,EADSC,yBAzBL,aAyBJC,KACiBC,aAAjBH,QACFI,EAAMC,mBACV,iBAAO,CACLX,MAAOA,GAnBQ,yBAoBfC,YAAaA,GAnBQ,8CAoBrBC,MAAO,GAAGI,GAAUJ,GAASU,KAC7BC,IAAK,GAAGP,EAAUF,KAEpB,CAACH,EAAaC,EAAOE,EAAUE,EAASN,IAE1C,OACE,YAAC,IAAD,CAAQc,aA3BS,yBA2BmBC,cAAa,gCAC7Cf,EAAe,KAAS,yBAAQU,EAAIV,OACtC,oBAAMgB,KAAK,cAAcC,QAASP,EAAIT,cACtC,oBAAMe,KAAK,QAAQC,QAASP,EAAIR,QAC/BQ,EAAIG,KAAO,oBAAMK,SAAS,SAASD,QAASP,EAAIG,OAC/CV,EAAiB,KAAS,oBAAMe,SAAS,UAAUD,QAAQ,YAC5DP,EAAIV,OAAS,oBAAMkB,SAAS,WAAWD,QAASP,EAAIV,QACpDU,EAAIT,aACH,oBAAMiB,SAAS,iBAAiBD,QAASP,EAAIT,cAE9CS,EAAIR,OAAS,oBAAMgB,SAAS,WAAWD,QAASP,EAAIR,QACrD,oBAAMc,KAAK,eAAeC,QAAQ,wBACjCP,EAAIV,OAAS,oBAAMgB,KAAK,gBAAgBC,QAASP,EAAIV,QACrDU,EAAIT,aACH,oBAAMe,KAAK,sBAAsBC,QAASP,EAAIT,cAE/CS,EAAIR,OAAS,oBAAMc,KAAK,gBAAgBC,QAASP,EAAIR,QACtD,oBAAMc,KAAK,eAAeC,QAAQ,eAClC,oBAAMD,KAAK,kBAAkBC,QAAQ,iBAK5BE,mBAAKpB,I,uHC5DdqB,EAAG,kFAKHC,EAAW,WACf,OACE,YAAC,IAAD,CAAWC,UAAWF,GACpB,YAAC,IAAD,MACA,YAAC,IAAD,CAAOG,SAAS,SAAhB,mBAKSJ,yBAAKE","file":"component---src-pages-404-tsx-0db370abd2511957c468.js","sourcesContent":["import { useLocation } from \"@reach/router\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport defaultImage from \"img/white_DDD_logo.jpg\";\nimport React, { memo, useMemo } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n\nconst defaultTitle = \"DDD TW Conference 2020\";\nconst defaultDescription = \"Domain-Driven Design Taiwan Conference 2020\";\n\nconst Seo = ({\n  title,\n  description,\n  image,\n  article,\n}: {\n  title?: string;\n  description?: string;\n  image?: string;\n  article?: boolean;\n}) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n  const { siteUrl } = site.siteMetadata;\n  const seo = useMemo(\n    () => ({\n      title: title || defaultTitle,\n      description: description || defaultDescription,\n      image: `${siteUrl}${image || defaultImage}`,\n      url: `${siteUrl}${pathname}`,\n    }),\n    [description, image, pathname, siteUrl, title]\n  );\n  return (\n    <Helmet defaultTitle={defaultTitle} titleTemplate={`%s | ${defaultTitle}`}>\n      {(title ? true : null) && <title>{seo.title}</title>}\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n      <meta name=\"twitter:site\" content=\"@DddTaiwan\" />\n      <meta name=\"twitter:creator\" content=\"@DddTaiwan\" />\n    </Helmet>\n  );\n};\n\nexport default memo(Seo);\n","import { Alert } from \"@material-ui/lab\";\nimport Container from \"components/Container\";\nimport Seo from \"components/Seo\";\nimport { css } from \"emotion\";\nimport React, { memo } from \"react\";\n\nconst cls = css`\n  label: container;\n  min-height: 320px;\n`;\n\nconst NotFound = () => {\n  return (\n    <Container className={cls}>\n      <Seo />\n      <Alert severity=\"error\">404 Not Found</Alert>\n    </Container>\n  );\n};\n\nexport default memo(NotFound);\n"],"sourceRoot":""}